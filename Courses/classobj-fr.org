** Apprentissage et classification sur des objets                  :classobj:
*** Description
**** Résumé
Cet atelier présente le module *Object Labeling* de *Monteverdi*. On
apprendra à utiliser le module et à observer l'influence des
différentes primitives sur la classification. On utilisera aussi une
approche simple d'apprentissage actif.

**** Pré-requis
- Notions d'analyse d'image sur des objets (OBIA, object based image analysis).
- Notions en apprentissage automatique pour la classification.

**** Objectifs
Apprendre à utiliser le module *Object Labeling* de *Monteverdi*.

*** \'Etapes

**** La segmentation préalable
Dans cette partie de l'exercice, nous utiliserons les données
suivantes :
~phr_pxs_melbourne_xt_small.tif~

~phr_pxs_melbourne_xt_small_segmentation.tif~

1. Utilisez l'application *ColorMapping* afin de mieux visualiser
   l'image segmentée (vous pouvez utiliser les modes /optimal/ ou /image/).

2. Analisez cette image couleur. Pour quel type d'objets la
   classification sur les objets risque de bien marcher? Et pour
   lesquels elle risque de ne pas bien marcher?

**** Introduction au module *Object Labeling*
1. Ouvrez l'image originale et la segmentation dans *Monteverdi*.
2. Lancez le module *Object Labeling* à partir du menu /Learning/.
3. A quoi sert chaque onglet à gauche de l'interface?
4. Créez une nouvelle classe dans l'onglet /Objects/. On peut lui
   changer le nom et la couleur.
5. Cliquez avec le boutton droit sur un objet de l'image. Que se passe-t'il?
6. Cliquez une 2è fois avec le boutton droit sur le même
   objet. Décrivez ce que vous observez.
7. Ajoutez quelques objets de plus à la classe courante.
8. Créez une nouvelle classe et ajoutez-y quelques objets.
9. Allez dans l'onglet /Features/ et dé-selectionnez toutes les
   primitives sauf les moyennes des valeurs radiométriques.
10. Allez dans l'onglet /Learning/ et cliquez sur /classify/. Que se passe-t'il?
11. Cliquez sur /Save/Quit/. Quel type de sorties sont produites par
    le module?

_Trucs et astuces :_
- Choisissez deux classes simples pour cette partie de l'exercice, par
  exemple /eau/ et /sol/.
- Utilisez la fenêtre de navigation pour changer la zone affichée.
- On peut modifier l'opacité de la couche de classification ainsi que
  celle des objets sélectionnés de façon à mieux analyser les résultats.
- Vous pouvez aussi effacer la couche de classification.

**** Utilisation avancée du module *Object Labeling*
Dans cette partie de l'exercice, nous utiliserons ces fichiers
supplémentaires : ~samples.xml~ et ~parameters.xml~.

1. Chargez à nouveau dans le module l'image et la segmentation.
2. Chargez le fichier ~samples.xml~ à l'aide du menu /File/Load
   Samples/. Quelles sont les classes importées? Combien d'exemples
   par classe sont utilisés?
3. Dé-selectionnez toutes les primitives sauf les moyennes
   radiométriques :
   - Band1::Mean
   - Band2::Mean
   - Band3::Mean
   - Band4::Mean
4. Réalisez la classification. Quels sont les objets de l'image mal
   classés du fait que leur classe n'existe pas?
5. Quels sont les objets mal classés à cause d'une mauvaise
   segmentation ou à cause de leur complexité?
6. Essayez d'améliorer la classification en ajoutant des classes manquantes.
7. Essayez d'améliorer la classification en utilisant d'autres
   primitives.

_Trucs et astuces :_
- Ce module est très gourmand en mémoire. En fonction de la mémoire
  disponible sur votre machine, il peut être utile de
  réinitialiser *Monteverdi*. 

**** Apprentissage actif avec le module *Object Labeling*
1. Dans l'onglet /Objects/, cliquez sur /Sample/ en bas à gauche. Ceci
   permet d'afficher des objets considérés comme étant difficiles à
   classer. On utilise ici la technique dite du /margin sampling/.
2. Quels sont les types de segments qui apparaissent comme difficiles
   à classer?
3. Essayez de créer une classe de rejet pour y ranger des segments de "bruit".
4. Réalisez quelques itérations de plus d'apprentissage actif. Qu'observez-vous?

*** Solutions                                            :classobj:solutions:

**** La segmentation préalable

***** Point 1
Voici les lignes de commande pour générer les images couleur :

: $ otbcli_ColorMapping
:   -in phr_pxs_melbourne_xt_small_segmentation.tif
:   -out obc_segmentation_optimal.png uint8
:   -method optimal

: $ otbcli_ColorMapping
:   -in phr_pxs_melbourne_xt_small_segmentation.tif
:   -out obc_segmentation_image.png uint8
:   -method image
:   -method.image.in  phr_pxs_melbourne_xt_small.tif

Et voici le résultat :

      #+Latex:\vspace{0.5cm}
      #+Latex:\begin{center}
      #+ATTR_LaTeX: width=0.4\textwidth
      [[file:Images/obc_segmentation_optimal.png]] [[file:Images/obc_segmentation_image.png]]
      #+Latex:\end{center}

***** Point 2
A partir des résultats de segmentation, on peut supposer que la
classification objet marchera bien sur :
- la plupart des cuves circulaires,
- la plupart des containers rectangulaires,
- les classes simples comme l'eau ou les routes.

En revanche, elle marchera plutôt mal sur :
- certains objets circulaires ou rectangulaires qui sont fragmentés
  par la segmentation,
- des objets complexes comme les bateaux ou les grues,
- des petits objets comme les voitures et les camions.

**** Introduction au module *Object Labeling*

***** Point 3
L'onglet /Objects/ permet de créer des classes et de leur ajouter des
objets pour l'apprentissage. L'onglet /Features/ permet de
sélectionner les primitives calculées sur les objets qui seront
utilisées pour la classification. Enfin, l'onglet /Learning/ sert à
régler les paramètres de la classification et à exécuter celle-ci.

***** Point 5
La région de la segmentation qui se trouve sous la souris est
sélectionné lors du premier click.

***** Point 6
La région sélectionnée est ajoutée à la classe courante lors du 2è
click.

***** Point 10
Un classifieur SVM est généré par apprentissage sur les objets
sélectionnées. Les autres régions de l'image sont classés en utilisant
le classifieur ainsi obtenu.

***** Point 11
Le boutton /Save/Quit/ permet de fermer le module et de produire les
sorties suivantes :
- une image d'étiquettes correspondant aux classes,
- une image couleur avec les couleurs des classes utilisées dans le module,
- ue sortie vecteur contenant des polygones étiquettés avec les
  classes décidées par le classifieur.

**** Utilisation avancée du module *Object Labeling*
***** Point 2
Les classes contenues dans le fichier sont :
- Circular containers
- Rectangular colored containers
- Rectangular white containers
- Water
- Asphalt

***** Point 4
Les échantillons fournis et les paramètres choisis produisent un
résultat où quelques classes de base sont détectées au prix de
mauvaises classifications sur des objets difficiles (voir la partie
gauche de la figure à la fin de cette section).

On peut noter quelques classes manquantes dans le jeu d'apprentissage
et qui induisent des erreurs :
- Les ombres qui sont classées comme eau. Même si la classe ombre ne
  fait pas partie des classes d'intérêt, il peut être utile de
  l'ajouter pour réduire les erreurs.
- Les zones de végétation, même si elles sont peu nombreuses, seront
  mal classées, car cette classe n'existe pas dans la nomenclature utilisée.

***** Point 5
Comme prédit dans la section sur la segmentation, quelques objets
d'intérêt sont mal segmentés ou trop complexes pour être bien classés :
- les bateaux et les grues sont trop complexes,
- certains containers (circulaires ou rectangulaires) sont mal
  segmentés, ce qui conduit à une mauvaise classification.

***** Point 6 - 7
En ajoutant quelques classes de plus et quelques exemples
supplémentaires, nous pouvons obtenir ce genre de résultat :

      #+Latex:\begin{center}
      #+ATTR_LaTeX: width=0.4\textwidth
      [[file:Images/obc_classif_samples.png]] [[file:Images/obc_classif_samples_solution.png]]
      #+Latex:\end{center}

**** Apprentissage actif avec le module *Object Labeling*

***** Point 2
La stratégie mise en oeuvre pour l'apprentissage actif propose souvent
des objets difficiles à étiquetter manuellement, car ils correspondent
à des parties d'objets mal segmentés ou à du bruit de segmentation.

***** Point 4
Nous pouvons remarquer que, de façon occasionnelle, l'apprentissage
actif permet de découvrir des nouveaux objets pour lesquels il n'y a
pas de classe encore définie. Parfois, on tombe aussi sur les mêmes
objets de façon répétée, car ils restent difficiles à classer après
plusieurs itérations.



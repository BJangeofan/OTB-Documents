** Feature extraction                                             :features:
*** Description
**** Abstract

     This workshop will introduce you to the *Feature Extraction*
     modules of *Monteverdi*. You will learn how to use these modules
     and visually evaluate the usefulness of different features for
     image information extraction.

**** Pre-requisites

     - Basic knowledge of *Monteverdi* usage

**** Achievements

     Being able to use the *Feature Extraction* modules of *Monteverdi*.

*** Steps

**** Getting around the *Feature Extraction* modules

/Feature extraction/ is a generic term which refers to the procedure
of processing images in order to produce either new images or a set of
objects in order to represent the information contained by the
processed image in a higher level of abstraction.

Other terms than /features/ can be used as for instance /primitives/,
/indices/ or /descriptors/. Although minor differences in meaning
exist among these terms, we will use the as synonims here.

In *Monteverdi* there are 5 different modules for feature extraction
and they are all grouped under the /Filtering/$\rightarrow$/Feature
extraction/ menu.

All /Feature extraction/ modules follow the same rationale: they take
  an input image (with any number of channels) and produce an output
  image where each band is one of the computed features. 

In this part of the exercise, we will use the following data:

~phr_xs_melbourne.tif~

1. Open the image in *Monteverdi*.
2. Open the *Smoothing* module from the
   /Filtering/$\rightarrow$/Feature extraction/ menu, and load the
   image and the segmentation inside the module.
3. What are the 3 image windows which appear at the top of the
   graphical user interface?
4. The /Action/ tab is selected by default. What can you do on this
   part of the module?
5. Select the /Output/ tab and describe what can you do on it.

**** *Smoothing* module
You can either keep the /Smoothing/ module open from the previous
exercice or close it and open another one in order to start with a
fresh one.

1. One of the available features is /Original data/. What is it and
   what may its purpose be?
2. Select the /Mean/ feature and choose to compute it only on the
   /intensity/ channel. What is the meaning of the /Radius along X/
   and /Radius along Y/ parameters and what is their effect on the
   computed feature?
3. Select the /Meanshift smooth/ feature. And try to guess the meaning
   of the parameters and their influence on the results.
4. Select the /Meanshift clusters/ feature. As you can see, the same
   parameters as for the /Meanshift smooth are available/. Which is
   the difference in terms of the computed feature?
**** *Edge extraction* module
Open the /Edge extraction/ module and give it the input image. In
order to keep thing simple, you will only work with one channel. Also,
the /Harris detector/ -- which an interest point detector -- and the
/Touzi/ filter -- which is to be used with SAR images -- will be
ignored.

By reading text displayed on the /Feature Information/ window and the
list of available parameters and their effect on the computed
features, answer to the following questions.

1. What does the /Meanshift boundaries/ feature provide?
2. How can a /Variance/ filter detect edges?
3. What is the effect of the /sigma/ value on the /Recursive gradient/ filter?
4. In the /Sobel/ edge detection, the result is an edge density
   computed after the application of a Sobel edge enhancing filtering
   (high pas filter). You can set 2 different thresholds. What is
   their effect on the result?
**** *Radiometric index extraction* module
By radiometric index we understand a combination of spectral bands
which enhances a particular type of material. There are indices for
vegetation, soils, water, artificial surfaces (built-up), and so
on. You can find detailed descriptions and bibliographic references
about this subjects by visiting the [[http://wiki.orfeo-toolbox.org/index.php/Radiometric_Indices][Radiometric indices]] page on the
Orfeo Toolbox Wiki and following the links therein.

1. Open the /Radiometric index extraction/ module and feed it with the
   4-band Pléiades image. Select the /NDVI/ index under the
   /Vegetation/ list of indices. Generate the feature by using
   different selections on the /Channels Selection/ list. Why is the
   result always the same regardless of the chosen channels?
2. Which are the spectral bands most commonly used for vegetation indices?
3. Find a value of the parameter /s/ for the MSAVI index which gives
   results close to the ones obtained by the RVI. What is the interest
   of indices with parameters as this one with respect to indices like
   RVI or NDVI for which there are no parameters?
4. Which water indices can't be computed on a Pléiades image?
**** *Texture extraction* module

***** SFS
The Structural Feature Set approach computes textures based on line direction analysis through the central pixel.
 
 Directions are computed at a constant step angle.
 A direction is defined as: $$ \mathit{d_{i} = \sqrt{(m^{e1}-m^{e2})^{2}+(n^{e1}-n^{e2})^{2}}} $$
 From  $\mathit{d_{i}}$, histograms are defined:
 $$ \mathit{H(c) : \{c \in I \mid \lbrack d_{1}(c), \ldots , d_{i}(c), \ldots , d_{D}(c)\rbrack  \}} $$
 Thus, 6 textures are defined :
 $$ \mathit{length = \max_{i \in \lbrack1; D\rbrack}(d_{i}(c)} $$
 $$ \mathit{width = \min_{i \in \lbrack1; D\rbrack}(d_{i}(c)} $$
 $$ \mathit{PSI = \frac{1}{D}\sum_{1=1}^{D}d_{i}(c)} $$
 $$ \mathit{\omega-mean = \frac{1}{D}\sum_{1=1}^{D}\frac{\alpha.(k_{i}-1)}{st_{i}}d_{i}(c)} $$
 $$ \mathit{ratio = \arctan{\frac{\sum_{j=1}^{n}{sort_{min}^{j}(H(c))}}{\sum_{j=1}^{n}{sort_{max}^{j}(H(c))}}}} $$
 $$ \mathit{SD = \frac{1}{D-1}\sqrt{\sum_{1=1}^{D}(d_{i}(c)-PSI)^{2}}} $$
 
1. Compute the $width$ and the $length$ features using the default
   parameters and explain what are the differences you observe on the results.
2. Which is the effect of the spectral threshold on the computation of
   the features? Same question for the spatial threshold.

***** Haralick
The Haralick textures are a set of indices computed from the
grey-level co-occurrence matrices of an image. These are matrices
computed on a grey-level image and for each pixel, a neighborhood is
defined by a rectangular window which is shifted by an offset.

Mathematically, a co-occurrence matrix $C$ is defined over an $n x m$
image $I$, parameterized by an offset $(\Delta x,\Delta y)$, as:

#+BEGIN_LATEX
$$C_{\Delta x, \Delta y}(i,j)=\sum_{p=1}^n\sum_{q=1}^m
\begin{array}{cc}
1, & \mbox{if }I(p,q)=i\mbox{ and }I(p+\Delta x,q+\Delta y)=j \\ 
0, & \mbox{otherwise}
\end{array}$$
#+END_LATEX
The image values are quantized using small number of bins so that the
equality between pixels are likely to occur.

There are 2 different implementations of the Haralick textures in
Monteverdi. We will use the 1st one.

1. Given the description above, what do you think is the meaning of
   the /radius/, /offset/, /min\/max/ and /quant. levels/ parameters?
2. Compute the /Entropy/ of the /intensity/ channel for different
   radiuses (2, 3, etc.). Which is the effect of this parameter?
3. Compute the /Energy/, /Entropy/, /Correlation/ and /Inertia/
   textures with the same parameters. Compare them and see if some of
   them are redundant.

*** Solutions                                          :features:solutions:

**** Getting around the *Feature Extraction* modules

***** Item 3
The graphical user interface displays a sub-sampled version of the
input image onn the left, the full resolution on the center and the
computed feature on the right. 

***** Item 4
The /Action/ tab allows you to select the feature to be computed,
decide on which channels the feature will be computed (if applicable),
set the parameters for the feature computation and see the list of
computed features. The /Add/ button effectively selects a given
feature for computation.

***** Item 5
The /Output/ tab allows you to decide which of the computed features
will be kept in the output image and in which order they will be
stored. 

**** *Smoothing* module

***** Item 1
The /Original data/ just copies the selected channels of the input
image as bands of the output image. This can be useful in the case
where you are creating a multi-channel image for a later
classification and you want to include some of the original bands,
side by side to other computed features.

***** Item 2
The radiuses define the size of a sliding window used to compute the
mean around every pixel of the image. The window will be a rectangle
centered on the pixel for which the mean is computed and sizes equal
to $2\times Radius_x +1$ in the horizontal direction and $2\times
Radius_y +1$ in the vertical one. The larger the radius the stronger
the smoothing.

***** Item 3
The /Meanshift smooth/ uses the mean-shift algorithm to smooth the
image. There are 2 main interests to this smoothing with respect to
the classical mean seen on the previous point:

1) edge preservation;
2) can be used on multi-channel images and take profit of
   inter-channel correlation.

This algorithm performs the smoothing simultaneously on the image
space (lines, columns) and on the feature space (for example, the
4-dimensional space defined by RGB+NIR images).

The meaning of the parameters is the following:
1. Spatial radius: the radius of the spatial window used for the smoothing.
2. Range radius: the radius of the smoothing window in the feature
   space.
3. Min. region size: the minimum size for a region to be kept in the
   clustering step (not used for the smoothing).
4. Scale: a multiplicative factor to be used for the image values
   which needs to be set if the image dynamics is low.

***** Item 4
The difference between the smoothing and the clustering is that the
latter produces an image which is piecewise constant. That is, an
image where connected pixels have the same value and form
regions. 

These regions are defined at the end of the smoothing procedure by
assigning each pixel the value of the mode of the histogram (in the
feature space) to which it belongs. Since these histograms are
computed also using a spatial window, the pixels belonging to the same
mode are close pixels in space. 

When clusters (a set of connected pixels associated with the same
histogram mode) define regions with sizes smaller than the minimum
region parameter, they are merged with the closest and most similar one.

**** *Edge extraction* module

***** Item 1
It's just the boundaries of the regions produced by the /Meanshift
clusters/ feature of the /Smoothing/ module.

***** Item 2
This filter assigns to each pixel the value of the local variance
inside a window centered on it:
$$ var(i,j) = \frac{1}{(2 Radius_x +1)\times(2 Radius_x +1)}\sum_{i-Radius_x}^{i+Radius_x}\sum_{j-Radius_y}^{j+Radius_y} \left(pix(i,j)-\mu(i,j)\right)^2$$
where $pix(i,j)$ is the input pixel value and $\mu(i,j)$ is the local
mean computed using the same window.

The variance values will be high when the pixel values inside the
window deviate from the local mean. This can happen in 2 cases:

1. When there is a strong texture effect.
2. When there are 2 or more regions inside the window with different
   mean values. This is the case when an edge is present.

***** Item 3
The recursive gradient uses a Gaussian smoothing (low pass filtering)
previous to gradient computation for edge detection. The /sigma/
parameter determines the width of the Gaussian smoothing, and
therefore the degree of blurring applied to the image before gradient
computation (edge detection).

The effect of the /sigma/ parameter will be the following: the larger
the value, the wider the edges and the fewer the over-detections due
to noise.

Therefore, the choice of the value of /sigma/ will depend on the noise
level of the image and on the kind of edges that one wants to detect.

***** Item 4
The lower and upper thresholds define the intervals of pixels which
will be set to 1 (below the lower and above the upper thresholds) or 0
(between the 2 thresholds) after the Sobel filtering and before the
edge density computation. Therefore, the thresholds determine how the
image produced by the Sobel filtering will be binarized before passing
it to the density computation (percentage of detected pixels inside
the window).
**** *Radiometric index extraction* module

***** Item 1
For the radiometric indices, the channel selection does not matter,
since each index is a particular combination of spectral bands. The
bands used are selected in the /Feature Parameters/ group.

***** Item 2
Most of the indices use the red (R) and the near infrared (NIR) bands,
since the vegetation has a low response on the R and high on the
NIR. Most indices use therefore combinations of differences and
ratios of these bands.

Sometimes, the green band is also used.
***** Item 3
Values greater than 6 should be fine.

The interest of having parameters is being able to take into account
soil reflectance for the cases of sparse vegetation. The /L/ parameter
of the SAVI index is close to 0 for very sparse vegetation and close
to 1 for a very dense cover. The /s/ parameter of the MSAVI index is
the slope of the soil line, that is the NIR reflectance plotted as a
function of the red reflectance for soil pixels.

***** Item 4
The NDTI and the NDWI can't be computed on a Pléiades image (or a
Quickbird image, for that matter) since the MIR (mid infrared, also
callwed SWIR for short-wave infrared) is not available.
In this case the NDWI2 index can be use.
**** *Texture extraction* module

***** SFS

****** Item 1
It may seem contradictory, but the $width$ feature gives hig values to
pixels which belong to elongated regions, while the $length$ feature
gives brigth values to any region (elongated or not) which has a large
area. If you have a look at the formulas for each feature you will
understand why.
****** Item 2
The spectral threshold sets the acceptable value of the difference
between 2 adjacent pixels along a line in order to continue adding new
pixels to the direction. Therefore, a small value for this thresholds
will produce shorter lines and therefore fewer pixels with bright
values.

The spatial threshold stops the length of the line in the given
direction regardless of the pixel values. Therefore, a low value for
this threshold will also produce shorter lines.
***** Haralick
****** Item 1
- The /radius/ parameter determines the size if the local window used
  for the co-occurrence matrix computation.
- The /offset/ parameter sets the $\Delta x$ and $\Delta y$ values for
  the co-occurrence matrix.
- The /min\/max/ values can be used to define the range of image
  values over which the quantification levels will be defined.
- The /quant. levels/ parameter defines the number of discrete values
  that will be used for comparing the pixel values in the
  co-occurrence matrix.
****** Item 2
The larger the radius, the wider the detected areas, since we are
introducing a kind of blurring of the computation by using larger windows.
****** Item 3
Visually, /Energy/ and /Entropy/ seem to be the most correlated, since
the pixel values are the most similar. However, if you have a closer
look, you will see that all 4 textures give the same kind of
information for typical remote sensign images. Although /Correlation/
and /Energy/ seem to be the most different because they present
different contrasts, they enhance the same areas as the other
textures.

Actually, Haralick textures are most useful for cases where
pseudo-periodic patterns appear and the texture parameters are well
suited. Otherwise, it is better to use 1st order statistics (as the
local variance) which are much more easy to compute and yield the same
kind of information.

